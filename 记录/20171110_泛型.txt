28.泛型  参数化列表
		操作参数化类型的类、接口或方法，称为泛型；
	泛型，类似对指定类型的占位符

1.泛型类：	
		泛型只能使用引用类型，不能使用基本类型；
		基于不同类型参数的泛型类型是不同的；
		
		好处： 自动确保类型安全，消除手动输入类型转换及类型检查的需要。
		
		多类型参数泛型：<T,V>,使用逗号将泛型参数类型分开
		
		泛型的一般形式：
				class 类名<类型参数列表>{}
				
	有界类型：在指定类型参数时，可以创建声明超累的上界，所有类型参数都必须派生自超类。
			这是当指定类型参数时使用extends子句完成的。
				形式：<T extends superClass>
					则，指定T 只能被superClass或其子类取代
			
			可以使用类、接口作为上界类型，可以指定多个接口，也可以指定一个类、多个接口作为上界类型；
			对于这种情况必须首先指定类类型，如果边界类型包含接口，那么只有实现了接口类型的类型参数是合法的。
					当指定一个类多个接口作为上界类型时，可以使用 & 连接。
	通配符参数类型
			通配符参数是由“ ？ ”指定，表示未知类型；
			通配符只是匹配所有有效的类型。

	有界通配符：
		有界通配符为类型参数指定上界或下界；
		   常用的有界通配符是上界，是使用extends子句创建的
		   

	   一般要为通配符建立上界，形式：<? extends  superclass>
			还可以为通配符创建下界，使用super子句，形式：<? super subClass>;
				对于这种情况，只有subClass的超类是可接受参数，为排除子句，与subClass指定的类不相匹配。

2.泛型方法：
	泛型方法的一般形式是：<参数类型列表>  返回值 方法名（参数）；
						参数类型列表由逗号分隔，对于泛型方法，类型参数列表必须位于返回类型之前。
						
3.泛型构造参数：
		可以将构造参数泛型化，即使类不是泛型
		和泛型方法类似，形式：<参数类型列表> 类名（参数）；
		
4.泛型接口：
	一般情况下，泛型接口和泛型类的声明类似。
	泛型接口的通用语法：
		interface interfaceName<type-param-list>{...}
		参数列表由逗号分隔，当实现泛型接口时，必须指定类型参数，例如：
						class className<type-param-list> implements interfaceName<type-arg-list>
		如果类实现了泛型接口，那么类也要泛型化，至少需要将被传递给接口的类型参数；但如果实现了某种具体类型的泛型接口，那么类就不需要泛型化。
	泛型接口的好处：
			1.可以针对不同类型的数据进行实现；
			2.可以为实现接口的数据类型设置限制条件(即界限)。

5.为了处理泛型过渡，java允许使用泛型类，而不提供任何类型参数。
		原始类型在编译过运行时才会报错，不会引起检查警告，而泛型化则会在编译时就会进行类检查机制；
		将原始类型赋给泛型绕过了类型安全机制，尽管可以赋给泛型，语法正确，但是可能产生潜在错误。（小心慎用原始类型）
		
		
6。泛型类层次：
	泛型类可以作为超类或子类。
		泛型类和非泛型类的区别：
							在泛型层次中，类层次中的所有子类都必须向上传递超类所需的所有类型参数。
						即使泛型超类的子类不必泛型化也仍然必须指定超类所需的类型参数。
							子类也可以自由添加自己的类型参数
							
7.非泛型类，同样可以作为泛型类的超类。
		运行时不能使用泛型类型信息。
		
8.强制转换
	只有当两个泛型类实例的类型相互兼容并且它们的类型参数也相同，才能将一个实例转换为另一个实例。
	
9.重写泛型类的方法。

10.泛型的类型推断
	创建泛型实例时，实例创建部分可以简单的使用  <>,这是一个空的类型参数列表，称为菱形运算符；
		一般形式：
			className<type-param-list> var = new className<>(cons-param-list);
			
11.擦除
	java泛型的处理原理？？？？？
	桥接方法？？？？？
	
	
12.泛型的引入可能引起“模糊性错误”。



13.使用泛型的限制
	1.不能实例化类型参数
	2.对静态成员的一些限制：静态成员不能使用在类中声明的类型参数
				如：class className<T>{
					static T arg;
					static T methodName(){};
				}
	3.对泛型数组的限制：1.不能实例化元素类型为类型参数的数组，泛型数组不能使用 new
							2.不能创建特定类型的泛型引用数组。
								不能声明指向特定泛型类型的引用的数组，
									但可以使用通配符创建指向泛型类型的引用的数组
	4.对泛型异常的限制
		泛型类不能拓展Throwable，即不能创建泛型异常类。