22，I/O流
最初的java1.0没有提供字符流，所有的流都是面向字节的。
	1）
	流，是一种抽象，要么产生信息，要么使用信息。
		两种流：字节流，字符流；
	字节流 在顶级的抽象类：InputStream和OutputStream;
	字符流：    Reader和Writer
	
	
	
	
23.transient和volatile修饰符

	instanceof运算符：运行时类型信息运算符，用于判定某个对象是否是某个类的实例。
	
	
24.assert 断言   用于在程序开发期间创建 断言。
		是在程序执行期间应当为true的条件。
		断言常用于证实在测试期间实际遇到了某些期望条件。
		
	断言一般表现形式有两种：
		1.  assert condition；
			如果断言为真，不会发生动作；如果条件为false，则断言失败会抛出AssertionError对象；
		2.  assert condition：expression
			在这种表达式中expression是传递给AssertionError构造函数的参数，如果断言失败则会显示该字符或表达式。
	
为了在运行时启动断言检查，必须指定 -ea选项 启动断言。开发工具默认是禁用断言。使用-da禁用断言。
		通过在	-ea或-da 选项 后面指定包的名称，并在后面加三个点，可以 启用或禁用 指定包（及其所有子包）的断言。
			一般形式如：-ea或-da:指定包的名称...
		也可以为-ea或-da指定某个具体类,形式如：-ea或-da:具体某个类

断言，不能依赖它们执行程序实际需要的任何动作，在正常情况下，发布代码在运行时会禁用断言。

使用断言 是为了验证程序结果是否符合预期。



25.   静态导入   拓展了import功能，在import后面添加static关键字，可以使用import导入类或接口的静态成员；
		当使用静态导入时，可以 直接使用名称引用静态成员，而不必使用他们的类名进行限定。
	静态导入有两种形式：
			1.第一种引入单个名称；
				import static 包名.类名/接口名.静态成员名称
			2.第二种引入指定类或接口的所有静态成员；
				import static 包名.类名或接口名.*,    即 使用通配符 * 进行限定
	静态导入的目的是针对某个重复使用的静态成员，滥用静态导入可能或导致命名空间名称冲突。
	

26.通过this()调用重载的构造函数
		在一个构造函数内调用另一个重载的构造函数，通过this()方法；
		作用是：减少不必要的重复代码，适合于包含大量初始化代码的构造函数。
	限制：
	 1.调用this()时，不能使用当前类的人和实例变量
	 2.在同一个构造方法中不能同时使用super()和this(),因为他们都必须放在构造函数的首条语句。
	 
27.-----紧凑API配置文件-----  ？？？？？？？？？？？？？？？
		compact1，compact2，compact3； 每个配置文件都是以前一个配置文件为基础