本包学习单例模式：
    单例模式：单例模式是为了确保某个类只有一个实例。
    单例模式特点：
        单例类只能有一个实例；
        单例类必须自己创建自己的实例；
        单例类必须给所有的其他的对象创建这一实例。
    单例模式保证了全局对象的唯一性。


    单例模式分类：
        饿汉模式 预加载模式
            Singleton通过将构造方法限定为private避免了类在外部被实例化，在同一个虚拟机范围内，
            Singleton的唯一实例只能通过getInstance()方法访问。（事实上，通过Java反射机制是能够
            实例化构造方法为private的类的，那基本上会使所有的Java单例实现失效。此问题在此处不做讨论，
            姑且闭着眼就认为反射机制不存在。）

        懒汉模式 后加载模式
            懒汉模式有分为多种情况：一种是直接返回对象实例；一种是通过同步代码块同步类对象，避免出现线程安全问题。



还有其他单例方式：
    静态内部类实现：
    静态代码块实现：
    内部枚举实现：
    URL：http://www.cnblogs.com/garryfu/p/7976546.html