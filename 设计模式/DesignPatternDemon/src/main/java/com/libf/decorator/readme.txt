本包学习装饰器模式：
    装饰器模式：
        允许向一个现有的对象添加新的功能，同时又不改变其结构；这种设计模式属于结构性模式。
        这种设计模式创建了一个装饰类，用来包装原有的类，并在保持类方法签名完整性前提下，提供额外的功能。

    优缺点：
        优点：装饰类和被装饰类可以独立发展，不会相互耦合，
                装饰模式是继承的一个替代模式，装饰模式可以动态拓展一个实现类的功能。
        缺点：
            多层装饰比较复杂。

    使用场景：1、拓展一个类的功能；2、动态增加功能，动态撤销

    装饰器可以对实现类的某些功能进行拓展，动态功能，并不影响原类的核心构架；


    注意事项：可替代继承

装饰模式：一般而言，装饰类与被装饰类具有相同的类型接口。

抽象装饰类：维护了一个具体被装饰类的实例，并在构造函数初始化时实例化，通常采用默认实现，仅仅为了声明

